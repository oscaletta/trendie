{"version":3,"sources":["components/header.js","index.js"],"names":["MenuItems","children","mt","base","md","mr","display","Header","props","useState","show","setShow","as","align","justify","wrap","padding","bg","color","size","letterSpacing","onClick","fill","width","viewBox","xmlns","d","sm","alignItems","flexGrow","border","useStyles","makeStyles","theme","root","paper","spacing","margin","maxWidth","image","height","img","maxHeight","breakpoints","lg","xl","newTheme","App","tokenData","setTokenData","priceData","setPriceData","isLoading","setIsLoading","input","currentDate","Date","formattedDate","getDate","getMonth","getFullYear","useEffect","ticker","urlTokenHistory","axios","get","then","response","data","console","log","usd","resetCSS","Paper","templateRows","templateColumns","gap","rowSpan","colSpan","w","borderRadius","overflow","_hover","src","small","alt","name","objectFit","h","mb","fontWeight","lineHeight","justifyContent","isTruncated","Typography","gutterBottom","variant","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.200e3398.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport { Box, Heading, Flex, Text, Button } from \"@chakra-ui/react\";\n\nconst MenuItems = ({ children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    {children}\n  </Text>\n);\n\n// Note: This code could be better, so I'd recommend you to understand how I solved and you could write yours better :)\nconst Header = props => {\n  const [show, setShow] = useState(false);\n  const handleToggle = () => setShow(!show);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.5rem\"\n      bg=\"teal.500\"\n      color=\"white\"\n      {...props}\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n          Altstronautas\n        </Heading>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n      >\n        <MenuItems>News</MenuItems>\n        <MenuItems>Portfolio</MenuItems>\n        <MenuItems>Blog</MenuItems>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Button bg=\"transparent\" border=\"1px\">\n          Create account\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from \"react-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport axios from 'axios';\nimport SearchBar from './components/searchbar';\nimport Header from './components/header';\nimport { theme, ChakraProvider, Grid, GridItem, Box, Image } from \"@chakra-ui/react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n\nconst breakpoints = [\"360px\", \"768px\", \"1024px\", \"1440px\"];\nbreakpoints.sm = breakpoints[0];\nbreakpoints.md = breakpoints[1];\nbreakpoints.lg = breakpoints[2];\nbreakpoints.xl = breakpoints[3];\n\nconst newTheme = {\n  ...theme,\n  breakpoints\n};\n\nfunction App() {\n\n  const classes = useStyles();\n  const [tokenData, setTokenData] = useState('');\n  const [priceData, setPriceData] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [input, setInput] = useState('');\n\n  let currentDate = new Date();\n  const formattedDate = currentDate.getDate() + '-' + currentDate.getMonth() + '-' + currentDate.getFullYear();\n\n  \n  useEffect(() => {\n    setIsLoading(true);\n    const ticker = \"chainlink\";\n    const urlTokenHistory = 'https://api.coingecko.com/api/v3/coins/'+ticker+'/history?date='+formattedDate;\n\n    axios.get(urlTokenHistory)\n         .then(response => {\n            const data  = response.data\n            setTokenData(data)\n         });\n\n    //fetching updated price\n    axios.get('https://api.coingecko.com/api/v3/simple/price?ids='+ticker+'&vs_currencies=usd')\n         .then(response => {\n            console.log(response.data[ticker] && response.data[ticker].usd)\n            const data  = response.data[ticker]\n            setPriceData(data)\n         });\n    setIsLoading(false);\n  },[])\n  \n  console.log(input);\n\n\n  return (\n    <>\n      <ChakraProvider theme={newTheme} resetCSS>\n        <Header />\n        <Paper>\n          <Grid\n          templateRows=\"repeat(1, 1fr)\"\n          templateColumns=\"repeat(8, 1fr)\"\n          gap={1}\n          >\n            <GridItem rowSpan={2} colSpan={1} bg=\"tomato\">\n              <Box\n                w=\"150px\"\n                borderRadius=\"10px\"\n                overflow=\"hidden\"\n                _hover={{ bg: \"lightgrey\" }}\n              >\n                <Image\n                  src={tokenData && tokenData.image && tokenData.image.small}\n                  alt={tokenData.name}\n                  height=\"155px\"\n                  width=\"155px\"\n                  objectFit=\"cover\"\n                  display=\"block\"\n                />\n                <Box\n                  as=\"h4\"\n                  h=\"40px\"\n                  mb=\"auto\"\n                  fontWeight=\"bold\"\n                  lineHeight=\"tight\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  color=\"black\"\n                  isTruncated\n                >\n                  {tokenData.name}\n                </Box>\n              </Box>\n            </GridItem>\n            <GridItem colSpan={3} bg=\"tomato\">\n              <Typography gutterBottom variant=\"subtitle1\">\n                {isLoading ? (<div>Loading ...</div>) : (tokenData.name)}\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Soramitsu\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                ID: 1030114\n              </Typography>\n              <Typography variant=\"subtitle1\">{isLoading ? ('Loading ...') : (priceData && priceData.usd )}</Typography>\n            </GridItem>\n            {/*<GridItem colSpan={3} bg=\"tomato\" />*/}\n          </Grid>\n        </Paper>\n        \n      </ChakraProvider>\n      {/*<SearchBar input={input} setInput={setInput}/>\n      <button size=\"xl\" variant=\"with-shadow\">Get data</button>*/}\n      \n    </>\n  );\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}