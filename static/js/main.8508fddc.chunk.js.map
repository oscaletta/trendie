{"version":3,"sources":["components/header.js","index.js"],"names":["MenuItems","children","mt","base","md","mr","display","Header","props","useState","show","setShow","as","align","justify","wrap","padding","bg","color","size","letterSpacing","onClick","fill","width","viewBox","xmlns","d","sm","alignItems","flexGrow","border","breakpoints","lg","xl","newTheme","theme","App","tokenData","setTokenData","priceData","setPriceData","setIsLoading","input","currentDate","Date","formattedDate","getDate","getMonth","getFullYear","useEffect","ticker","urlTokenHistory","axios","get","then","response","data","console","log","usd","resetCSS","maxW","borderWidth","borderRadius","overflow","src","image","small","alt","p","px","colorScheme","fontWeight","fontSize","textTransform","ml","name","lineHeight","isTruncated","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8508fddc.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport { Box, Heading, Flex, Text, Button } from \"@chakra-ui/react\";\n\nconst MenuItems = ({ children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    {children}\n  </Text>\n);\n\n// Note: This code could be better, so I'd recommend you to understand how I solved and you could write yours better :)\nconst Header = props => {\n  const [show, setShow] = useState(false);\n  const handleToggle = () => setShow(!show);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.5rem\"\n      bg=\"teal.500\"\n      color=\"white\"\n      {...props}\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n          Altstronautas\n        </Heading>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n      >\n        <MenuItems>News</MenuItems>\n        <MenuItems>Portfolio</MenuItems>\n        <MenuItems>Blog</MenuItems>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Button bg=\"transparent\" border=\"1px\">\n          Create account\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport Header from './components/header';\nimport { theme, ChakraProvider, Box, Image, Badge, StarIcon } from \"@chakra-ui/react\";\n\n\n\nconst breakpoints = [\"360px\", \"768px\", \"1024px\", \"1440px\"];\nbreakpoints.sm = breakpoints[0];\nbreakpoints.md = breakpoints[1];\nbreakpoints.lg = breakpoints[2];\nbreakpoints.xl = breakpoints[3];\n\nconst newTheme = {\n  ...theme,\n  breakpoints\n};\n\nfunction App() {\n\n  \n  const [tokenData, setTokenData] = useState('');\n  const [priceData, setPriceData] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [input, setInput] = useState('');\n\n  let currentDate = new Date();\n  const formattedDate = currentDate.getDate() + '-' + currentDate.getMonth() + '-' + currentDate.getFullYear();\n\n  \n  useEffect(() => {\n    setIsLoading(true);\n    const ticker = \"chainlink\";\n    const urlTokenHistory = 'https://api.coingecko.com/api/v3/coins/'+ticker+'/history?date='+formattedDate;\n\n    axios.get(urlTokenHistory)\n         .then(response => {\n            const data  = response.data\n            setTokenData(data)\n         });\n\n    //fetching updated price\n    axios.get('https://api.coingecko.com/api/v3/simple/price?ids='+ticker+'&vs_currencies=usd')\n         .then(response => {\n            console.log(response.data[ticker] && response.data[ticker].usd)\n            const data  = response.data[ticker]\n            setPriceData(data)\n         });\n    setIsLoading(false);\n  },[])\n  \n  console.log(input);\n\n\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n\n  return (\n    <>\n      <ChakraProvider theme={newTheme} resetCSS>\n        <Header />\n        <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n          <Image src={tokenData && tokenData.image && tokenData.image.small} alt={tokenData && tokenData.image && tokenData.image.small} />\n          <Box p=\"6\">\n                  <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                    New\n                  </Badge>\n\n                  <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\"\n                    fontSize=\"xs\" textTransform=\"uppercase\" ml=\"2\">\n                    {tokenData.name} beds &bull; {tokenData.name} baths\n                  </Box>\n\n                  <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\"\n                    isTruncated>\n                    {tokenData.name}\n                  </Box>\n                  \n                  <Box>\n                    {priceData && priceData.usd }\n                    <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n                      / wk\n                    </Box>\n                  </Box>\n\n                  <Box d=\"flex\" mt=\"2\" alignItems=\"center\"> \n                    \n                    <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                      {priceData && priceData.usd} reviews\n                    </Box>\n                  </Box>\n          </Box>        \n        </Box>\n      </ChakraProvider>\n    </>\n  );\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}